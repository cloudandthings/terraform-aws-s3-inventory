name: Terraform min-max

on:
  pull_request:

concurrency:
  # https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  collectDirectories:
    name: üç± collect directories
    # Outputs a list of all unique directories
    # that contain *.tf files and do not start with .
    # For public repos use runs-on: ubuntu-latest
    # For private repos use runs-on: codebuild-...
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          DIRS=$(find . -type f -name '*.tf' -not -path '**/.*' | sed -r 's|/[^/]+$||' | grep -v './modules/external' | sort | uniq)
          DIRS_JSON=$(jq -ncR '[inputs]' <<< "$DIRS")
          cat <<< matrix=$DIRS_JSON >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  validateTerraformMinMaxVersions:
    name: üèóÔ∏è Validate Terraform min/max versions
    needs: collectDirectories
    # For public repos use runs-on: ubuntu-latest
    # For private repos use runs-on: codebuild-...
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.collectDirectories.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: jdx/mise-action@v2

      - name: Get Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.4.1
        with:
          directory: ${{ matrix.directory }}

      - name: Validate min Terraform version (${{ steps.minMax.outputs.minVersion }})
        run: |
          ls -la ~
          mise use terraform@${{ steps.minMax.outputs.minVersion }}
          terraform --version
          terraform init -backend=false
          terraform validate

      - name: Validate max Terraform version (${{ steps.minMax.outputs.maxVersion }})
        run: |
          mise use terraform@${{ steps.minMax.outputs.maxVersion }}
          terraform --version
          terraform init -backend=false
          terraform validate
